CCS PCM C Compiler, Version 4.104, 5967               08-fev-24 01:48

               Filename: C:\Users\julio\OneDrive\Documentos\Julio Cesar Jauer\Eng. da Comp. IFMT\Microcontroladores\Semaforo\mainSemaforo.lst

               ROM used: 229 words (3%)
                         Largest free fragment is 2048
               RAM used: 6 (2%) at main() level
                         9 (2%) worst case
               Stack:    2 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   088
0003:  NOP
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=6000000) 
*
0004:  MOVLW  23
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  F1
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  NOP
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
....................  
....................   
.................... void semaforo() { 
....................    output_low(PIN_D0); 
0019:  BSF    03.5
001A:  BCF    08.0
001B:  BCF    03.5
001C:  BCF    08.0
....................    output_low(PIN_D7); 
001D:  BSF    03.5
001E:  BCF    08.7
001F:  BCF    03.5
0020:  BCF    08.7
....................     
....................    delay_ms(10000); 
0021:  MOVLW  28
0022:  MOVWF  22
0023:  MOVLW  FA
0024:  MOVWF  23
0025:  CALL   004
0026:  DECFSZ 22,F
0027:  GOTO   023
....................     
....................    output_high(PIN_D0); 
0028:  BSF    03.5
0029:  BCF    08.0
002A:  BCF    03.5
002B:  BSF    08.0
....................    output_low(PIN_D1); 
002C:  BSF    03.5
002D:  BCF    08.1
002E:  BCF    03.5
002F:  BCF    08.1
....................    delay_ms(3000); 
0030:  MOVLW  0C
0031:  MOVWF  22
0032:  MOVLW  FA
0033:  MOVWF  23
0034:  CALL   004
0035:  DECFSZ 22,F
0036:  GOTO   032
....................     
....................    output_high(PIN_D1); 
0037:  BSF    03.5
0038:  BCF    08.1
0039:  BCF    03.5
003A:  BSF    08.1
....................    output_low(PIN_D2); 
003B:  BSF    03.5
003C:  BCF    08.2
003D:  BCF    03.5
003E:  BCF    08.2
....................    delay_ms(1000); 
003F:  MOVLW  04
0040:  MOVWF  22
0041:  MOVLW  FA
0042:  MOVWF  23
0043:  CALL   004
0044:  DECFSZ 22,F
0045:  GOTO   041
....................    output_high(PIN_D7); 
0046:  BSF    03.5
0047:  BCF    08.7
0048:  BCF    03.5
0049:  BSF    08.7
....................    output_low(PIN_D6); 
004A:  BSF    03.5
004B:  BCF    08.6
004C:  BCF    03.5
004D:  BCF    08.6
....................     
....................    delay_ms(10000); 
004E:  MOVLW  28
004F:  MOVWF  22
0050:  MOVLW  FA
0051:  MOVWF  23
0052:  CALL   004
0053:  DECFSZ 22,F
0054:  GOTO   050
....................    output_high(PIN_D6); 
0055:  BSF    03.5
0056:  BCF    08.6
0057:  BCF    03.5
0058:  BSF    08.6
....................    int i; 
....................    for(i=0;i<5;i++) { 
0059:  CLRF   21
005A:  MOVF   21,W
005B:  SUBLW  04
005C:  BTFSS  03.0
005D:  GOTO   076
....................       output_high(PIN_D7); 
005E:  BSF    03.5
005F:  BCF    08.7
0060:  BCF    03.5
0061:  BSF    08.7
....................       delay_ms(500); 
0062:  MOVLW  02
0063:  MOVWF  22
0064:  MOVLW  FA
0065:  MOVWF  23
0066:  CALL   004
0067:  DECFSZ 22,F
0068:  GOTO   064
....................       output_low(PIN_D7); 
0069:  BSF    03.5
006A:  BCF    08.7
006B:  BCF    03.5
006C:  BCF    08.7
....................       delay_ms(500); 
006D:  MOVLW  02
006E:  MOVWF  22
006F:  MOVLW  FA
0070:  MOVWF  23
0071:  CALL   004
0072:  DECFSZ 22,F
0073:  GOTO   06F
....................    } 
0074:  INCF   21,F
0075:  GOTO   05A
....................     
....................    delay_ms(500); 
0076:  MOVLW  02
0077:  MOVWF  22
0078:  MOVLW  FA
0079:  MOVWF  23
007A:  CALL   004
007B:  DECFSZ 22,F
007C:  GOTO   078
....................    output_high(PIN_D2); 
007D:  BSF    03.5
007E:  BCF    08.2
007F:  BCF    03.5
0080:  BSF    08.2
....................    output_low(PIN_D0); 
0081:  BSF    03.5
0082:  BCF    08.0
0083:  BCF    03.5
0084:  BCF    08.0
.................... } 
0085:  BCF    0A.3
0086:  BCF    0A.4
0087:  GOTO   0E2 (RETURN)
....................  
.................... void main() 
.................... { 
0088:  CLRF   04
0089:  BCF    03.7
008A:  MOVLW  1F
008B:  ANDWF  03,F
008C:  BSF    03.5
008D:  BSF    1F.0
008E:  BSF    1F.1
008F:  BSF    1F.2
0090:  BCF    1F.3
0091:  MOVLW  07
0092:  MOVWF  1C
....................  
....................    setup_adc_ports(NO_ANALOGS); 
*
0096:  BSF    03.5
0097:  BSF    1F.0
0098:  BSF    1F.1
0099:  BSF    1F.2
009A:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
009B:  BCF    1F.6
009C:  BCF    03.5
009D:  BCF    1F.6
009E:  BCF    1F.7
009F:  BSF    03.5
00A0:  BCF    1F.7
00A1:  BCF    03.5
00A2:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
00A3:  BSF    03.5
00A4:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
00A5:  BCF    03.5
00A6:  BCF    14.5
00A7:  BCF    20.5
00A8:  MOVF   20,W
00A9:  BSF    03.5
00AA:  MOVWF  07
00AB:  BCF    03.5
00AC:  BSF    20.4
00AD:  MOVF   20,W
00AE:  BSF    03.5
00AF:  MOVWF  07
00B0:  BCF    03.5
00B1:  BCF    20.3
00B2:  MOVF   20,W
00B3:  BSF    03.5
00B4:  MOVWF  07
00B5:  MOVLW  01
00B6:  BCF    03.5
00B7:  MOVWF  14
00B8:  MOVLW  00
00B9:  BSF    03.5
00BA:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
00BB:  MOVF   01,W
00BC:  ANDLW  C7
00BD:  IORLW  08
00BE:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
00BF:  BCF    03.5
00C0:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
00C1:  MOVLW  00
00C2:  MOVWF  78
00C3:  MOVWF  12
00C4:  MOVLW  00
00C5:  BSF    03.5
00C6:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
00C7:  MOVLW  07
00C8:  MOVWF  1C
00C9:  MOVF   05,W
00CA:  MOVWF  05
00CB:  MOVLW  04
00CC:  MOVWF  77
00CD:  DECFSZ 77,F
00CE:  GOTO   0CD
00CF:  GOTO   0D0
00D0:  MOVF   1C,W
00D1:  BCF    03.5
00D2:  BCF    0D.6
....................    setup_vref(FALSE); 
00D3:  BSF    03.5
00D4:  CLRF   1D
....................  
....................    // TODO: USER CODE!! 
....................     
....................    while(true) { 
....................       output_low(PIN_D0); 
00D5:  BCF    08.0
00D6:  BCF    03.5
00D7:  BCF    08.0
....................       output_low(PIN_D7); 
00D8:  BSF    03.5
00D9:  BCF    08.7
00DA:  BCF    03.5
00DB:  BCF    08.7
....................       while(input(PIN_B0)); 
00DC:  BSF    03.5
00DD:  BSF    06.0
00DE:  BCF    03.5
00DF:  BTFSC  06.0
00E0:  GOTO   0DC
....................       semaforo(); 
00E1:  GOTO   019
....................    } 
00E2:  BSF    03.5
00E3:  GOTO   0D5
.................... } 
00E4:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
