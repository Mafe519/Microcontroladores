CCS PCM C Compiler, Version 4.104, 5967               15-fev-24 17:51

               Filename: C:\Users\julio\OneDrive\Documentos\Julio Cesar Jauer\Eng. da Comp. IFMT\Microcontroladores\Pisca com Interrupção\PiscaInterruptMain.lst

               ROM used: 146 words (2%)
                         Largest free fragment is 2048
               RAM used: 14 (4%) at main() level
                         14 (4%) worst case
               Stack:    1 worst case (0 in main + 1 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   03E
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.5
0018:  GOTO   01B
0019:  BTFSC  0B.2
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   02F
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES BROWNOUT                 //Reset when brownout detected 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=20000000) 
....................  
.................... unsigned int i = 0; 
....................  
.................... #int_RTCC 
.................... void  RTCC_isr(void)     
.................... { 
....................    i++; 
*
002F:  INCF   27,F
....................    if(i >= 122) { 
0030:  MOVF   27,W
0031:  SUBLW  79
0032:  BTFSC  03.0
0033:  GOTO   03A
....................       output_toggle(PIN_D0); 
0034:  BSF    03.5
0035:  BCF    08.0
0036:  MOVLW  01
0037:  BCF    03.5
0038:  XORWF  08,F
....................       i = 0; 
0039:  CLRF   27
....................    } 
.................... } 
....................  
....................  
....................  
003A:  BCF    0B.2
003B:  BCF    0A.3
003C:  BCF    0A.4
003D:  GOTO   01B
.................... void main() 
.................... { 
003E:  CLRF   04
003F:  BCF    03.7
0040:  MOVLW  1F
0041:  ANDWF  03,F
0042:  CLRF   27
0043:  BSF    03.5
0044:  BSF    1F.0
0045:  BSF    1F.1
0046:  BSF    1F.2
0047:  BCF    1F.3
0048:  MOVLW  07
0049:  MOVWF  1C
....................  
....................    setup_adc_ports(NO_ANALOGS); 
*
004D:  BSF    03.5
004E:  BSF    1F.0
004F:  BSF    1F.1
0050:  BSF    1F.2
0051:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_DIV_2); 
0052:  BCF    1F.6
0053:  BCF    03.5
0054:  BCF    1F.6
0055:  BCF    1F.7
0056:  BSF    03.5
0057:  BCF    1F.7
0058:  BCF    03.5
0059:  BSF    1F.0
....................    setup_psp(PSP_DISABLED); 
005A:  BSF    03.5
005B:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
005C:  BCF    03.5
005D:  BCF    14.5
005E:  BCF    28.5
005F:  MOVF   28,W
0060:  BSF    03.5
0061:  MOVWF  07
0062:  BCF    03.5
0063:  BSF    28.4
0064:  MOVF   28,W
0065:  BSF    03.5
0066:  MOVWF  07
0067:  BCF    03.5
0068:  BCF    28.3
0069:  MOVF   28,W
006A:  BSF    03.5
006B:  MOVWF  07
006C:  MOVLW  01
006D:  BCF    03.5
006E:  MOVWF  14
006F:  MOVLW  00
0070:  BSF    03.5
0071:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_16); 
0072:  MOVF   01,W
0073:  ANDLW  C0
0074:  IORLW  03
0075:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
0076:  BCF    03.5
0077:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0078:  MOVLW  00
0079:  MOVWF  78
007A:  MOVWF  12
007B:  MOVLW  00
007C:  BSF    03.5
007D:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
007E:  MOVLW  07
007F:  MOVWF  1C
0080:  MOVF   05,W
0081:  MOVWF  05
0082:  MOVLW  10
0083:  MOVWF  77
0084:  DECFSZ 77,F
0085:  GOTO   084
0086:  NOP
0087:  MOVF   1C,W
0088:  BCF    03.5
0089:  BCF    0D.6
....................    setup_vref(FALSE); 
008A:  BSF    03.5
008B:  CLRF   1D
....................    enable_interrupts(INT_RTCC); 
008C:  BCF    03.5
008D:  BSF    0B.5
....................    enable_interrupts(GLOBAL); 
008E:  MOVLW  C0
008F:  IORWF  0B,F
....................  
....................    // TODO: USER CODE!! 
....................    while(true); 
0090:  GOTO   090
.................... } 
0091:  SLEEP

Configuration Fuses:
   Word  1: 3F7A   HS NOWDT NOPUT NODEBUG NOPROTECT BROWNOUT NOLVP NOCPD NOWRT
