CCS PCM C Compiler, Version 4.104, 5967               06-ago-24 17:06

               Filename: C:\Micro\servoMirror\ServoMirrorMain.lst

               ROM used: 403 words (5%)
                         Largest free fragment is 2048
               RAM used: 16 (4%) at main() level
                         26 (7%) worst case
               Stack:    1 locations

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   0CA
0003:  NOP
.................... //#include "C:\Micro\servoMirror\ServoMirrorMain.h" 
.................... #include <16F877A.h> 
.................... //////// Standard Header file for the PIC16F877A device //////////////// 
.................... #device PIC16F877A 
.................... #list 
....................  
.................... #device adc=8 
....................  
.................... #FUSES NOWDT                    //No Watch Dog Timer 
.................... #FUSES HS                       //High speed Osc (> 4mhz for PCM/PCH) (>10mhz for PCD) 
.................... #FUSES NOPUT                    //No Power Up Timer 
.................... #FUSES NOPROTECT                //Code not protected from reading 
.................... #FUSES NODEBUG                  //No Debug mode for ICD 
.................... #FUSES NOBROWNOUT               //No brownout reset 
.................... #FUSES NOLVP                    //No low voltage prgming, B3(PIC16) or B5(PIC18) used for I/O 
.................... #FUSES NOCPD                    //No EE protection 
.................... #FUSES NOWRT                    //Program memory not write protected 
.................... #FUSES RESERVED                 //Used to set the reserved FUSE bits 
....................  
.................... #use delay(clock=6000000) 
*
00BB:  MOVLW  0A
00BC:  SUBWF  2B,F
00BD:  BTFSS  03.0
00BE:  GOTO   0C9
00BF:  MOVLW  2B
00C0:  MOVWF  04
00C1:  BCF    03.7
00C2:  BCF    03.0
00C3:  RRF    00,F
00C4:  MOVF   00,W
00C5:  BTFSC  03.2
00C6:  GOTO   0C9
00C7:  DECFSZ 00,F
00C8:  GOTO   0C7
00C9:  RETURN
....................  
.................... void main() 
.................... { 
00CA:  CLRF   04
00CB:  BCF    03.7
00CC:  MOVLW  1F
00CD:  ANDWF  03,F
00CE:  BSF    03.5
00CF:  BSF    1F.0
00D0:  BSF    1F.1
00D1:  BSF    1F.2
00D2:  BCF    1F.3
00D3:  MOVLW  07
00D4:  MOVWF  1C
*
00D8:  CLRF   22
00D9:  CLRF   21
00DA:  CLRF   25
....................    unsigned long anguloMedia=0; 
....................    unsigned long adc_valor; 
....................    //unsigned int angulo = 0; 
....................    unsigned int i =0; 
....................    unsigned long pulse_width; 
....................     
....................    setup_adc_ports(ALL_ANALOG); 
00DB:  BSF    03.5
00DC:  BCF    1F.0
00DD:  BCF    1F.1
00DE:  BCF    1F.2
00DF:  BCF    1F.3
....................    setup_adc(ADC_CLOCK_INTERNAL); 
00E0:  BCF    1F.6
00E1:  BCF    03.5
00E2:  BSF    1F.6
00E3:  BSF    1F.7
00E4:  BSF    03.5
00E5:  BCF    1F.7
00E6:  BCF    03.5
00E7:  BSF    1F.0
....................    set_adc_channel(0); 
00E8:  MOVLW  00
00E9:  MOVWF  78
00EA:  MOVF   1F,W
00EB:  ANDLW  C7
00EC:  IORWF  78,W
00ED:  MOVWF  1F
....................    setup_psp(PSP_DISABLED); 
00EE:  BSF    03.5
00EF:  BCF    09.4
....................    setup_spi(SPI_SS_DISABLED); 
00F0:  BCF    03.5
00F1:  BCF    14.5
00F2:  BCF    20.5
00F3:  MOVF   20,W
00F4:  BSF    03.5
00F5:  MOVWF  07
00F6:  BCF    03.5
00F7:  BSF    20.4
00F8:  MOVF   20,W
00F9:  BSF    03.5
00FA:  MOVWF  07
00FB:  BCF    03.5
00FC:  BCF    20.3
00FD:  MOVF   20,W
00FE:  BSF    03.5
00FF:  MOVWF  07
0100:  MOVLW  01
0101:  BCF    03.5
0102:  MOVWF  14
0103:  MOVLW  00
0104:  BSF    03.5
0105:  MOVWF  14
....................    setup_timer_0(RTCC_INTERNAL|RTCC_DIV_1); 
0106:  MOVF   01,W
0107:  ANDLW  C7
0108:  IORLW  08
0109:  MOVWF  01
....................    setup_timer_1(T1_DISABLED); 
010A:  BCF    03.5
010B:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
010C:  MOVLW  00
010D:  MOVWF  78
010E:  MOVWF  12
010F:  MOVLW  00
0110:  BSF    03.5
0111:  MOVWF  12
....................    setup_comparator(NC_NC_NC_NC); 
0112:  MOVLW  07
0113:  MOVWF  1C
0114:  MOVF   05,W
0115:  MOVWF  05
0116:  MOVLW  04
0117:  MOVWF  77
0118:  DECFSZ 77,F
0119:  GOTO   118
011A:  GOTO   11B
011B:  MOVF   1C,W
011C:  BCF    03.5
011D:  BCF    0D.6
....................    setup_vref(FALSE); 
011E:  BSF    03.5
011F:  CLRF   1D
....................  
....................    // TODO: USER CODE! 
....................     
....................    while(true){ 
....................      adc_valor = 0; 
0120:  BCF    03.5
0121:  CLRF   24
0122:  CLRF   23
....................       for(i = 0; i < 4; i++){ 
0123:  CLRF   25
0124:  MOVF   25,W
0125:  SUBLW  03
0126:  BTFSS  03.0
0127:  GOTO   136
....................          adc_valor += read_adc(); 
0128:  BSF    1F.2
0129:  BTFSC  1F.2
012A:  GOTO   129
012B:  MOVF   1E,W
012C:  ADDWF  23,F
012D:  BTFSC  03.0
012E:  INCF   24,F
....................          delay_us(20); 
012F:  MOVLW  09
0130:  MOVWF  77
0131:  DECFSZ 77,F
0132:  GOTO   131
0133:  GOTO   134
....................       }  
0134:  INCF   25,F
0135:  GOTO   124
....................        
....................       anguloMedia = adc_valor/4; 
0136:  RRF    24,W
0137:  MOVWF  22
0138:  RRF    23,W
0139:  MOVWF  21
013A:  RRF    22,F
013B:  RRF    21,F
013C:  MOVLW  3F
013D:  ANDWF  22,F
....................        
....................       
....................      /* angulo = (unsigned int)(anguloMedia*180)/255;  //(adc_valor*180/(3*275)) 
....................        
....................       Rotation(angulo); 
....................        
....................       delay_ms(50);*/ 
....................        
....................      
....................      pulse_width = 9.80 * anguloMedia; 
013E:  MOVF   22,W
013F:  MOVWF  29
0140:  MOVF   21,W
0141:  MOVWF  28
0142:  GOTO   004
0143:  MOVLW  CD
0144:  MOVWF  2B
0145:  MOVLW  CC
0146:  MOVWF  2A
0147:  MOVLW  1C
0148:  MOVWF  29
0149:  MOVLW  82
014A:  MOVWF  28
014B:  MOVF   7A,W
014C:  MOVWF  2F
014D:  MOVF   79,W
014E:  MOVWF  2E
014F:  MOVF   78,W
0150:  MOVWF  2D
0151:  MOVF   77,W
0152:  MOVWF  2C
0153:  GOTO   023
0154:  MOVF   7A,W
0155:  MOVWF  2B
0156:  MOVF   79,W
0157:  MOVWF  2A
0158:  MOVF   78,W
0159:  MOVWF  29
015A:  MOVF   77,W
015B:  MOVWF  28
015C:  GOTO   09A
015D:  MOVF   79,W
015E:  MOVWF  27
015F:  MOVF   78,W
0160:  MOVWF  26
....................        
....................       output_high(PIN_D0); 
0161:  BSF    03.5
0162:  BCF    08.0
0163:  BCF    03.5
0164:  BSF    08.0
....................       delay_us(pulse_width); 
0165:  MOVF   27,W
0166:  MOVWF  28
0167:  INCF   28,F
0168:  DECF   28,F
0169:  BTFSC  03.2
016A:  GOTO   16F
016B:  MOVLW  FF
016C:  MOVWF  2B
016D:  CALL   0BB
016E:  GOTO   168
016F:  MOVF   26,W
0170:  MOVWF  2B
0171:  CALL   0BB
....................       output_low(PIN_D0); 
0172:  BSF    03.5
0173:  BCF    08.0
0174:  BCF    03.5
0175:  BCF    08.0
....................       delay_us(20000 - pulse_width); 
0176:  MOVF   26,W
0177:  SUBLW  20
0178:  MOVWF  28
0179:  MOVLW  4E
017A:  MOVWF  29
017B:  MOVF   27,W
017C:  BTFSS  03.0
017D:  INCFSZ 27,W
017E:  SUBWF  29,F
017F:  MOVF   29,W
0180:  MOVWF  2A
0181:  INCF   2A,F
0182:  DECF   2A,F
0183:  BTFSC  03.2
0184:  GOTO   189
0185:  MOVLW  FF
0186:  MOVWF  2B
0187:  CALL   0BB
0188:  GOTO   182
0189:  MOVF   28,W
018A:  MOVWF  2B
018B:  CALL   0BB
....................       
....................      delay_us(50); 
018C:  MOVLW  18
018D:  MOVWF  77
018E:  DECFSZ 77,F
018F:  GOTO   18E
0190:  GOTO   191
....................      
....................    }   
0191:  GOTO   121
....................    
.................... } 
....................  
....................  
0192:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NODEBUG NOPROTECT NOBROWNOUT NOLVP NOCPD NOWRT
